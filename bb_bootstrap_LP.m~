function [Yboot Xboot] = bb_bootstrap_LP(Y,X,nsimul,lags)
% no bias correction yet - although it should not change substantially 

% Inputs:
% Y which is the projected variable at horizon h. Length is T
% X is the matrix of regressor. Length is T
% nsimul = number of simulations, i.e. how many bootstrapped datasets to generate
% As block_size we use approximately half of the dataset
% CI is confidence interval. Say 95% for example

% Given all the possible combinations of Y and X we extract only a subset
% of consecutive Y and X of length block_size
T                  = length(Y); %this is 
q                  = lags + 1; 
l                  = floor((T-q)^(1/3)); %quite arbitrary 

% need to do for every h
% there are (T-l+1) (1+q)-tuples


for isimul = 1:nsimul
    for j  = 1:floor(T/l)
      draw               = randi(T-l+1,1); 
      Yboot(:,isimul)    = [Y; Y(draw:draw+l)];
      Xboot(:,:,isimul)  = [X; X(draw:draw+l,:)];
    end
end








end